# Generated by Django 2.2.12 on 2020-06-26 21:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Abilities',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('strength', models.IntegerField(default=0)),
                ('dexterity', models.IntegerField(default=0)),
                ('constitution', models.IntegerField(default=0)),
                ('wisdom', models.IntegerField(default=0)),
                ('intelligence', models.IntegerField(default=0)),
                ('charisma', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ActiveEffect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Alignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('alignment', models.CharField(choices=[('LE', 'Lawful Evil'), ('NE', 'Neutral Evil'), ('CN', 'Chaotic Neutral'), ('CE', 'Chaotic Evil'), ('LG', 'Lawful Good'), ('CG', 'Chaotic Good'), ('NN', 'True Neutral'), ('NG', 'Neutral Good'), ('LN', 'Lawful Neutral')], max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='AmmoType',
            fields=[
                ('type', models.CharField(max_length=15, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True)),
                ('photo', models.ImageField(null=True, upload_to='')),
                ('shortHand', models.CharField(max_length=3)),
                ('hitDie', models.CharField(max_length=6)),
                ('ranks', models.IntegerField()),
                ('alignment', models.ManyToManyField(to='player.Alignment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClassLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField()),
                ('bab1', models.IntegerField()),
                ('bab2', models.IntegerField()),
                ('bab3', models.IntegerField()),
                ('bab4', models.IntegerField()),
                ('fort', models.IntegerField()),
                ('ref', models.IntegerField()),
                ('will', models.IntegerField()),
                ('gameClass', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player.Class')),
            ],
        ),
        migrations.CreateModel(
            name='Effect',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True)),
                ('attackBonus', models.IntegerField(default=0)),
                ('extraDamage', models.IntegerField(default=0)),
                ('damage', models.CharField(max_length=10)),
                ('fort', models.IntegerField(default=0)),
                ('will', models.IntegerField(default=0)),
                ('ref', models.IntegerField(default=0)),
                ('abilities', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='player.Abilities')),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True)),
                ('photo', models.ImageField(null=True, upload_to='')),
                ('specialProperties', models.TextField(blank=True)),
                ('specialName', models.CharField(blank=True, max_length=100)),
                ('size', models.CharField(choices=[('F', 'Fine'), ('D', 'Diminutive'), ('S', 'Small'), ('M', 'Medium'), ('L', 'Large'), ('H', 'Huge'), ('G', 'Gargantuan'), ('C', 'Colossal')], default='M', max_length=1)),
                ('weight', models.IntegerField()),
                ('masterwork', models.BooleanField()),
                ('material', models.CharField(default='Normal', max_length=100)),
                ('effects', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='player.Effect')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True)),
                ('photo', models.ImageField(null=True, upload_to='')),
                ('size', models.CharField(choices=[('F', 'Fine'), ('D', 'Diminutive'), ('S', 'Small'), ('M', 'Medium'), ('L', 'Large'), ('H', 'Huge'), ('G', 'Gargantuan'), ('C', 'Colossal')], max_length=1)),
                ('speed', models.IntegerField(default=30)),
                ('fort', models.IntegerField(default=0)),
                ('will', models.IntegerField(default=0)),
                ('ref', models.IntegerField(default=0)),
                ('abilities', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player.Abilities')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('subclass', models.CharField(blank=True, default='', max_length=100)),
                ('acPenalty', models.BooleanField(default=False)),
                ('untrained', models.BooleanField()),
                ('ability', models.CharField(max_length=3)),
                ('description', models.TextField()),
                ('url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='SkillRank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ranks', models.IntegerField()),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player.Skill')),
            ],
        ),
        migrations.CreateModel(
            name='SpecialAbilities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Spell',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True)),
                ('photo', models.ImageField(null=True, upload_to='')),
                ('effect', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('inventory_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='player.Inventory')),
                ('primaryHand', models.CharField(default='R', max_length=1)),
            ],
            bases=('player.inventory',),
        ),
        migrations.CreateModel(
            name='WearableItem',
            fields=[
                ('item_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='player.Item')),
                ('area', models.CharField(choices=[('NECK', 'Neck'), ('EYE', 'Eye'), ('HEAD', 'Head'), ('FEET', 'Feet'), ('TORSO', 'Torso'), ('LEGS', 'Legs')], max_length=50)),
            ],
            options={
                'abstract': False,
            },
            bases=('player.item',),
        ),
        migrations.CreateModel(
            name='WieldableItem',
            fields=[
                ('item_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='player.Item')),
                ('area', models.CharField(choices=[('1H', 'One Handed'), ('2H', 'Two Handed')], max_length=2)),
            ],
            options={
                'abstract': False,
            },
            bases=('player.item',),
        ),
        migrations.CreateModel(
            name='SelectedRace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appliedAbilities', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player.Abilities')),
                ('race', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player.Race')),
            ],
        ),
        migrations.AddField(
            model_name='race',
            name='raceSpecialAbilities',
            field=models.ManyToManyField(blank=True, to='player.SpecialAbilities'),
        ),
        migrations.CreateModel(
            name='PC',
            fields=[
                ('playerName', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='')),
                ('gender', models.CharField(default='Male', max_length=50)),
                ('abilities', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='player.Abilities')),
                ('activeEffects', models.ManyToManyField(blank=True, to='player.ActiveEffect')),
                ('alignment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='player.Alignment')),
                ('classLevels', models.ManyToManyField(blank=True, to='player.ClassLevel')),
                ('inventory', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='player.Inventory')),
                ('race', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='player.SelectedRace')),
                ('equipment', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='player.Equipment')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowsSpecialProperties', models.BooleanField()),
                ('knowsSpecialName', models.BooleanField()),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='player.Inventory')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player.Item')),
            ],
        ),
        migrations.AddField(
            model_name='inventory',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player.Location'),
        ),
        migrations.AddField(
            model_name='classlevel',
            name='specialAbilities',
            field=models.ManyToManyField(blank=True, to='player.SpecialAbilities'),
        ),
        migrations.AddField(
            model_name='class',
            name='classSkills',
            field=models.ManyToManyField(blank=True, to='player.Skill'),
        ),
        migrations.AddField(
            model_name='activeeffect',
            name='effect',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player.Effect'),
        ),
        migrations.CreateModel(
            name='Armor',
            fields=[
                ('wearableitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='player.WearableItem')),
                ('ac', models.IntegerField()),
                ('arcaneFailure', models.IntegerField()),
                ('maxDex', models.IntegerField()),
                ('ACPenalty', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
            bases=('player.wearableitem',),
        ),
        migrations.CreateModel(
            name='PCSkillRank',
            fields=[
                ('skillrank_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='player.SkillRank')),
                ('pc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skillRanks', to='player.PC')),
            ],
            bases=('player.skillrank',),
        ),
        migrations.CreateModel(
            name='MagicalItem',
            fields=[
                ('item_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='player.Item')),
                ('spell', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player.Spell')),
            ],
            options={
                'abstract': False,
            },
            bases=('player.item',),
        ),
        migrations.AddField(
            model_name='equipment',
            name='armor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='armors', to='player.InventoryItem'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='eyes',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='eyes', to='player.InventoryItem'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='feet',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feet', to='player.InventoryItem'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='leftHand',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='leftHanded', to='player.InventoryItem'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='legs',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='legs', to='player.InventoryItem'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='neck',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='neck', to='player.InventoryItem'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='rightHand',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='righthanded', to='player.InventoryItem'),
        ),
        migrations.CreateModel(
            name='EffectSkillRank',
            fields=[
                ('skillrank_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='player.SkillRank')),
                ('effect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player.Effect')),
            ],
            bases=('player.skillrank',),
        ),
        migrations.CreateModel(
            name='Ammo',
            fields=[
                ('item_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='player.Item')),
                ('damage', models.CharField(max_length=10)),
                ('extraDamage', models.IntegerField()),
                ('ammountPerWeight', models.IntegerField()),
                ('ammoType', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='player.AmmoType')),
            ],
            options={
                'abstract': False,
            },
            bases=('player.item',),
        ),
        migrations.CreateModel(
            name='Shield',
            fields=[
                ('armor_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='player.Armor')),
                ('hands', models.CharField(choices=[('1H', 'One Handed')], max_length=2)),
            ],
            options={
                'abstract': False,
            },
            bases=('player.armor',),
        ),
        migrations.CreateModel(
            name='Weapon',
            fields=[
                ('wieldableitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='player.WieldableItem')),
                ('blunt', models.BooleanField(default=False)),
                ('pierce', models.BooleanField(default=False)),
                ('slash', models.BooleanField(default=False)),
                ('damage', models.CharField(max_length=9)),
                ('criticalRange', models.IntegerField()),
                ('critical', models.IntegerField()),
                ('ranged', models.BooleanField()),
                ('range', models.IntegerField()),
                ('hands', models.IntegerField()),
                ('needsAmmo', models.BooleanField(default=False)),
                ('defaultAmmoType', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='player.AmmoType')),
            ],
            options={
                'abstract': False,
            },
            bases=('player.wieldableitem',),
        ),
        migrations.CreateModel(
            name='AmmoBundle',
            fields=[
                ('wieldableitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='player.WieldableItem')),
                ('quantity', models.IntegerField()),
                ('ammo', models.ManyToManyField(to='player.Ammo')),
            ],
            options={
                'abstract': False,
            },
            bases=('player.wieldableitem',),
        ),
    ]
